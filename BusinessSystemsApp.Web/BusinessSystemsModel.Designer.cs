//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_CompaniesAssignment_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessSystemsApp.Web.Company), "CompaniesAssignment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.CompaniesAssignment), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_CompaniesAssignment_Company1", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessSystemsApp.Web.Company), "CompaniesAssignment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.CompaniesAssignment), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_CompanyPriorities_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessSystemsApp.Web.Company), "CompanyPriorities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.CompanyPriorities), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_CompanyStatuses_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessSystemsApp.Web.Company), "CompanyStatuses", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.CompanyStatuses), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_ProductsInCompany_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessSystemsApp.Web.Company), "ProductsInCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.ProductsInCompany), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_CompanyPriorities_Priority", "Priority", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessSystemsApp.Web.Priority), "CompanyPriorities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.CompanyPriorities), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_CompanyStatuses_Csr_Status", "Csr_Status", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessSystemsApp.Web.Csr_Status), "CompanyStatuses", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.CompanyStatuses), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_User_Contact", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessSystemsApp.Web.Contact), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.User), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_ProductsInCompany_Product", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessSystemsApp.Web.Product), "ProductsInCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.ProductsInCompany), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_User_UserType", "UserType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessSystemsApp.Web.UserType), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.User), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_UserNotifications_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessSystemsApp.Web.User), "UserNotifications", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.UserNotifications), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_Site_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessSystemsApp.Web.Company), "Site", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.Site), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_AttachmenttAssign_Attachment", "Attachment", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessSystemsApp.Web.Attachment), "AttachmenttAssign", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.AttachmenttAssign), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_AttachmenttAssign_Csr", "Csr", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessSystemsApp.Web.Csr), "AttachmenttAssign", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.AttachmenttAssign), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_AttachmenttAssign_KB_Notes", "KB_Notes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessSystemsApp.Web.KB_Notes), "AttachmenttAssign", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.AttachmenttAssign), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_AttachmenttAssign_Notes", "Notes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessSystemsApp.Web.Notes), "AttachmenttAssign", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.AttachmenttAssign), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_Csr_CommunicationChannel", "CommunicationChannel", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessSystemsApp.Web.CommunicationChannel), "Csr", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.Csr), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_Csr_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessSystemsApp.Web.Company), "Csr", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.Csr), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_User_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessSystemsApp.Web.Company), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.User), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_Csr_Csr_Status", "Csr_Status", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessSystemsApp.Web.Csr_Status), "Csr", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.Csr), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_Csr_Frequency", "Frequency", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessSystemsApp.Web.Frequency), "Csr", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.Csr), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_Csr_Priority", "Priority", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessSystemsApp.Web.Priority), "Csr", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.Csr), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_Csr_Severity", "Severity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessSystemsApp.Web.Severity), "Csr", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.Csr), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_Csr_Site", "Site", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessSystemsApp.Web.Site), "Csr", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.Csr), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_Csr_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessSystemsApp.Web.User), "Csr", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.Csr), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_KB_Notes_Csr", "Csr", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessSystemsApp.Web.Csr), "KB_Notes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.KB_Notes), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_Notes_Csr", "Csr", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessSystemsApp.Web.Csr), "Notes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.Notes), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_UserLogging_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessSystemsApp.Web.User), "UserLogging", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.UserLogging), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_KB_Notes_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessSystemsApp.Web.User), "KB_Notes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.KB_Notes), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_Notes_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessSystemsApp.Web.User), "Notes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.Notes), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_KB_Notes_Product", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessSystemsApp.Web.Product), "KB_Notes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.KB_Notes), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_Csr_Product", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessSystemsApp.Web.Product), "Csr", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.Csr), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_Csr_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessSystemsApp.Web.User), "Csr", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.Csr), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_Csr_User2", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessSystemsApp.Web.User), "Csr", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.Csr), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_User_Localization", "Localization", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessSystemsApp.Web.Localization), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.User), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_IssueDomainInCompany_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessSystemsApp.Web.Company), "IssueDomainInCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.IssueDomainInCompany), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_RequesterTypeInCompany_RequesterTypeInCompany", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessSystemsApp.Web.Company), "RequesterTypeInCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.RequesterTypeInCompany), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_Csr_IssueDomain", "IssueDomain", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessSystemsApp.Web.IssueDomain), "Csr", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.Csr), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_Csr_RequesterType", "RequesterType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessSystemsApp.Web.RequesterType), "Csr", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.Csr), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_IssueDomainInCompany_IssueDomain", "IssueDomain", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessSystemsApp.Web.IssueDomain), "IssueDomainInCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.IssueDomainInCompany), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_RequesterTypeInCompany_RequesterType", "RequesterType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessSystemsApp.Web.RequesterType), "RequesterTypeInCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BusinessSystemsApp.Web.RequesterTypeInCompany), true)]
[assembly: EdmRelationshipAttribute("BusinessSystemsModel", "FK_IssueDomain_IssueDomain", "IssueDomain", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BusinessSystemsApp.Web.IssueDomain), "IssueDomain1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BusinessSystemsApp.Web.IssueDomain), true)]

#endregion

namespace BusinessSystemsApp.Web
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class BusinessSystemsConnectionString : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new BusinessSystemsConnectionString object using the connection string found in the 'BusinessSystemsConnectionString' section of the application configuration file.
        /// </summary>
        public BusinessSystemsConnectionString() : base("name=BusinessSystemsConnectionString", "BusinessSystemsConnectionString")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BusinessSystemsConnectionString object.
        /// </summary>
        public BusinessSystemsConnectionString(string connectionString) : base(connectionString, "BusinessSystemsConnectionString")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BusinessSystemsConnectionString object.
        /// </summary>
        public BusinessSystemsConnectionString(EntityConnection connection) : base(connection, "BusinessSystemsConnectionString")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CommunicationChannel> CommunicationChannel
        {
            get
            {
                if ((_CommunicationChannel == null))
                {
                    _CommunicationChannel = base.CreateObjectSet<CommunicationChannel>("CommunicationChannel");
                }
                return _CommunicationChannel;
            }
        }
        private ObjectSet<CommunicationChannel> _CommunicationChannel;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompaniesAssignment> CompaniesAssignment
        {
            get
            {
                if ((_CompaniesAssignment == null))
                {
                    _CompaniesAssignment = base.CreateObjectSet<CompaniesAssignment>("CompaniesAssignment");
                }
                return _CompaniesAssignment;
            }
        }
        private ObjectSet<CompaniesAssignment> _CompaniesAssignment;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Company> Company
        {
            get
            {
                if ((_Company == null))
                {
                    _Company = base.CreateObjectSet<Company>("Company");
                }
                return _Company;
            }
        }
        private ObjectSet<Company> _Company;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompanyPriorities> CompanyPriorities
        {
            get
            {
                if ((_CompanyPriorities == null))
                {
                    _CompanyPriorities = base.CreateObjectSet<CompanyPriorities>("CompanyPriorities");
                }
                return _CompanyPriorities;
            }
        }
        private ObjectSet<CompanyPriorities> _CompanyPriorities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompanyStatuses> CompanyStatuses
        {
            get
            {
                if ((_CompanyStatuses == null))
                {
                    _CompanyStatuses = base.CreateObjectSet<CompanyStatuses>("CompanyStatuses");
                }
                return _CompanyStatuses;
            }
        }
        private ObjectSet<CompanyStatuses> _CompanyStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contact> Contact
        {
            get
            {
                if ((_Contact == null))
                {
                    _Contact = base.CreateObjectSet<Contact>("Contact");
                }
                return _Contact;
            }
        }
        private ObjectSet<Contact> _Contact;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Csr_Status> Csr_Status
        {
            get
            {
                if ((_Csr_Status == null))
                {
                    _Csr_Status = base.CreateObjectSet<Csr_Status>("Csr_Status");
                }
                return _Csr_Status;
            }
        }
        private ObjectSet<Csr_Status> _Csr_Status;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Frequency> Frequency
        {
            get
            {
                if ((_Frequency == null))
                {
                    _Frequency = base.CreateObjectSet<Frequency>("Frequency");
                }
                return _Frequency;
            }
        }
        private ObjectSet<Frequency> _Frequency;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Priority> Priority
        {
            get
            {
                if ((_Priority == null))
                {
                    _Priority = base.CreateObjectSet<Priority>("Priority");
                }
                return _Priority;
            }
        }
        private ObjectSet<Priority> _Priority;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> Product
        {
            get
            {
                if ((_Product == null))
                {
                    _Product = base.CreateObjectSet<Product>("Product");
                }
                return _Product;
            }
        }
        private ObjectSet<Product> _Product;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductsInCompany> ProductsInCompany
        {
            get
            {
                if ((_ProductsInCompany == null))
                {
                    _ProductsInCompany = base.CreateObjectSet<ProductsInCompany>("ProductsInCompany");
                }
                return _ProductsInCompany;
            }
        }
        private ObjectSet<ProductsInCompany> _ProductsInCompany;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Severity> Severity
        {
            get
            {
                if ((_Severity == null))
                {
                    _Severity = base.CreateObjectSet<Severity>("Severity");
                }
                return _Severity;
            }
        }
        private ObjectSet<Severity> _Severity;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Site> Site
        {
            get
            {
                if ((_Site == null))
                {
                    _Site = base.CreateObjectSet<Site>("Site");
                }
                return _Site;
            }
        }
        private ObjectSet<Site> _Site;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> User
        {
            get
            {
                if ((_User == null))
                {
                    _User = base.CreateObjectSet<User>("User");
                }
                return _User;
            }
        }
        private ObjectSet<User> _User;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserNotifications> UserNotifications
        {
            get
            {
                if ((_UserNotifications == null))
                {
                    _UserNotifications = base.CreateObjectSet<UserNotifications>("UserNotifications");
                }
                return _UserNotifications;
            }
        }
        private ObjectSet<UserNotifications> _UserNotifications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserType> UserType
        {
            get
            {
                if ((_UserType == null))
                {
                    _UserType = base.CreateObjectSet<UserType>("UserType");
                }
                return _UserType;
            }
        }
        private ObjectSet<UserType> _UserType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_SitesWithCompany> vw_SitesWithCompany
        {
            get
            {
                if ((_vw_SitesWithCompany == null))
                {
                    _vw_SitesWithCompany = base.CreateObjectSet<vw_SitesWithCompany>("vw_SitesWithCompany");
                }
                return _vw_SitesWithCompany;
            }
        }
        private ObjectSet<vw_SitesWithCompany> _vw_SitesWithCompany;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Attachment> Attachment
        {
            get
            {
                if ((_Attachment == null))
                {
                    _Attachment = base.CreateObjectSet<Attachment>("Attachment");
                }
                return _Attachment;
            }
        }
        private ObjectSet<Attachment> _Attachment;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AttachmenttAssign> AttachmenttAssign
        {
            get
            {
                if ((_AttachmenttAssign == null))
                {
                    _AttachmenttAssign = base.CreateObjectSet<AttachmenttAssign>("AttachmenttAssign");
                }
                return _AttachmenttAssign;
            }
        }
        private ObjectSet<AttachmenttAssign> _AttachmenttAssign;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Csr> Csr
        {
            get
            {
                if ((_Csr == null))
                {
                    _Csr = base.CreateObjectSet<Csr>("Csr");
                }
                return _Csr;
            }
        }
        private ObjectSet<Csr> _Csr;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<KB_Notes> KB_Notes
        {
            get
            {
                if ((_KB_Notes == null))
                {
                    _KB_Notes = base.CreateObjectSet<KB_Notes>("KB_Notes");
                }
                return _KB_Notes;
            }
        }
        private ObjectSet<KB_Notes> _KB_Notes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Notes> Notes
        {
            get
            {
                if ((_Notes == null))
                {
                    _Notes = base.CreateObjectSet<Notes>("Notes");
                }
                return _Notes;
            }
        }
        private ObjectSet<Notes> _Notes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagrams> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagrams>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagrams> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserLogging> UserLogging
        {
            get
            {
                if ((_UserLogging == null))
                {
                    _UserLogging = base.CreateObjectSet<UserLogging>("UserLogging");
                }
                return _UserLogging;
            }
        }
        private ObjectSet<UserLogging> _UserLogging;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Localization> Localization
        {
            get
            {
                if ((_Localization == null))
                {
                    _Localization = base.CreateObjectSet<Localization>("Localization");
                }
                return _Localization;
            }
        }
        private ObjectSet<Localization> _Localization;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IssueDomain> IssueDomain
        {
            get
            {
                if ((_IssueDomain == null))
                {
                    _IssueDomain = base.CreateObjectSet<IssueDomain>("IssueDomain");
                }
                return _IssueDomain;
            }
        }
        private ObjectSet<IssueDomain> _IssueDomain;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IssueDomainInCompany> IssueDomainInCompany
        {
            get
            {
                if ((_IssueDomainInCompany == null))
                {
                    _IssueDomainInCompany = base.CreateObjectSet<IssueDomainInCompany>("IssueDomainInCompany");
                }
                return _IssueDomainInCompany;
            }
        }
        private ObjectSet<IssueDomainInCompany> _IssueDomainInCompany;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RequesterType> RequesterType
        {
            get
            {
                if ((_RequesterType == null))
                {
                    _RequesterType = base.CreateObjectSet<RequesterType>("RequesterType");
                }
                return _RequesterType;
            }
        }
        private ObjectSet<RequesterType> _RequesterType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RequesterTypeInCompany> RequesterTypeInCompany
        {
            get
            {
                if ((_RequesterTypeInCompany == null))
                {
                    _RequesterTypeInCompany = base.CreateObjectSet<RequesterTypeInCompany>("RequesterTypeInCompany");
                }
                return _RequesterTypeInCompany;
            }
        }
        private ObjectSet<RequesterTypeInCompany> _RequesterTypeInCompany;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CommunicationChannel EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCommunicationChannel(CommunicationChannel communicationChannel)
        {
            base.AddObject("CommunicationChannel", communicationChannel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompaniesAssignment EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompaniesAssignment(CompaniesAssignment companiesAssignment)
        {
            base.AddObject("CompaniesAssignment", companiesAssignment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Company EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompany(Company company)
        {
            base.AddObject("Company", company);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompanyPriorities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanyPriorities(CompanyPriorities companyPriorities)
        {
            base.AddObject("CompanyPriorities", companyPriorities);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompanyStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanyStatuses(CompanyStatuses companyStatuses)
        {
            base.AddObject("CompanyStatuses", companyStatuses);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contact EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContact(Contact contact)
        {
            base.AddObject("Contact", contact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Csr_Status EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCsr_Status(Csr_Status csr_Status)
        {
            base.AddObject("Csr_Status", csr_Status);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Frequency EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFrequency(Frequency frequency)
        {
            base.AddObject("Frequency", frequency);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Priority EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPriority(Priority priority)
        {
            base.AddObject("Priority", priority);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Product EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProduct(Product product)
        {
            base.AddObject("Product", product);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductsInCompany EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductsInCompany(ProductsInCompany productsInCompany)
        {
            base.AddObject("ProductsInCompany", productsInCompany);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Severity EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSeverity(Severity severity)
        {
            base.AddObject("Severity", severity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Site EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSite(Site site)
        {
            base.AddObject("Site", site);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the User EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUser(User user)
        {
            base.AddObject("User", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserNotifications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserNotifications(UserNotifications userNotifications)
        {
            base.AddObject("UserNotifications", userNotifications);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserType(UserType userType)
        {
            base.AddObject("UserType", userType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_SitesWithCompany EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_SitesWithCompany(vw_SitesWithCompany vw_SitesWithCompany)
        {
            base.AddObject("vw_SitesWithCompany", vw_SitesWithCompany);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Attachment EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAttachment(Attachment attachment)
        {
            base.AddObject("Attachment", attachment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AttachmenttAssign EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAttachmenttAssign(AttachmenttAssign attachmenttAssign)
        {
            base.AddObject("AttachmenttAssign", attachmenttAssign);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Csr EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCsr(Csr csr)
        {
            base.AddObject("Csr", csr);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the KB_Notes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToKB_Notes(KB_Notes kB_Notes)
        {
            base.AddObject("KB_Notes", kB_Notes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Notes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNotes(Notes notes)
        {
            base.AddObject("Notes", notes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagrams sysdiagrams)
        {
            base.AddObject("sysdiagrams", sysdiagrams);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserLogging EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserLogging(UserLogging userLogging)
        {
            base.AddObject("UserLogging", userLogging);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Localization EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocalization(Localization localization)
        {
            base.AddObject("Localization", localization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IssueDomain EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIssueDomain(IssueDomain issueDomain)
        {
            base.AddObject("IssueDomain", issueDomain);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IssueDomainInCompany EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIssueDomainInCompany(IssueDomainInCompany issueDomainInCompany)
        {
            base.AddObject("IssueDomainInCompany", issueDomainInCompany);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RequesterType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRequesterType(RequesterType requesterType)
        {
            base.AddObject("RequesterType", requesterType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RequesterTypeInCompany EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRequesterTypeInCompany(RequesterTypeInCompany requesterTypeInCompany)
        {
            base.AddObject("RequesterTypeInCompany", requesterTypeInCompany);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BusinessSystemsModel", Name="Attachment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Attachment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Attachment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="url">Initial value of the Url property.</param>
        public static Attachment CreateAttachment(global::System.Int32 id, global::System.String url)
        {
            Attachment attachment = new Attachment();
            attachment.Id = id;
            attachment.Url = url;
            return attachment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AttachmentName
        {
            get
            {
                return _AttachmentName;
            }
            set
            {
                OnAttachmentNameChanging(value);
                ReportPropertyChanging("AttachmentName");
                _AttachmentName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AttachmentName");
                OnAttachmentNameChanged();
            }
        }
        private global::System.String _AttachmentName;
        partial void OnAttachmentNameChanging(global::System.String value);
        partial void OnAttachmentNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_AttachmenttAssign_Attachment", "AttachmenttAssign")]
        public EntityCollection<AttachmenttAssign> AttachmenttAssign
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AttachmenttAssign>("BusinessSystemsModel.FK_AttachmenttAssign_Attachment", "AttachmenttAssign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AttachmenttAssign>("BusinessSystemsModel.FK_AttachmenttAssign_Attachment", "AttachmenttAssign", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BusinessSystemsModel", Name="AttachmenttAssign")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AttachmenttAssign : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AttachmenttAssign object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static AttachmenttAssign CreateAttachmenttAssign(global::System.Int32 id)
        {
            AttachmenttAssign attachmenttAssign = new AttachmenttAssign();
            attachmenttAssign.Id = id;
            return attachmenttAssign;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CsrId
        {
            get
            {
                return _CsrId;
            }
            set
            {
                OnCsrIdChanging(value);
                ReportPropertyChanging("CsrId");
                _CsrId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CsrId");
                OnCsrIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CsrId;
        partial void OnCsrIdChanging(Nullable<global::System.Int32> value);
        partial void OnCsrIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NoteId
        {
            get
            {
                return _NoteId;
            }
            set
            {
                OnNoteIdChanging(value);
                ReportPropertyChanging("NoteId");
                _NoteId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoteId");
                OnNoteIdChanged();
            }
        }
        private Nullable<global::System.Int32> _NoteId;
        partial void OnNoteIdChanging(Nullable<global::System.Int32> value);
        partial void OnNoteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> KBNoteId
        {
            get
            {
                return _KBNoteId;
            }
            set
            {
                OnKBNoteIdChanging(value);
                ReportPropertyChanging("KBNoteId");
                _KBNoteId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("KBNoteId");
                OnKBNoteIdChanged();
            }
        }
        private Nullable<global::System.Int32> _KBNoteId;
        partial void OnKBNoteIdChanging(Nullable<global::System.Int32> value);
        partial void OnKBNoteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AttachmentId
        {
            get
            {
                return _AttachmentId;
            }
            set
            {
                OnAttachmentIdChanging(value);
                ReportPropertyChanging("AttachmentId");
                _AttachmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttachmentId");
                OnAttachmentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AttachmentId;
        partial void OnAttachmentIdChanging(Nullable<global::System.Int32> value);
        partial void OnAttachmentIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_AttachmenttAssign_Attachment", "Attachment")]
        public Attachment Attachment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attachment>("BusinessSystemsModel.FK_AttachmenttAssign_Attachment", "Attachment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attachment>("BusinessSystemsModel.FK_AttachmenttAssign_Attachment", "Attachment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Attachment> AttachmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attachment>("BusinessSystemsModel.FK_AttachmenttAssign_Attachment", "Attachment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Attachment>("BusinessSystemsModel.FK_AttachmenttAssign_Attachment", "Attachment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_AttachmenttAssign_Csr", "Csr")]
        public Csr Csr
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Csr>("BusinessSystemsModel.FK_AttachmenttAssign_Csr", "Csr").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Csr>("BusinessSystemsModel.FK_AttachmenttAssign_Csr", "Csr").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Csr> CsrReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Csr>("BusinessSystemsModel.FK_AttachmenttAssign_Csr", "Csr");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Csr>("BusinessSystemsModel.FK_AttachmenttAssign_Csr", "Csr", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_AttachmenttAssign_KB_Notes", "KB_Notes")]
        public KB_Notes KB_Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<KB_Notes>("BusinessSystemsModel.FK_AttachmenttAssign_KB_Notes", "KB_Notes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<KB_Notes>("BusinessSystemsModel.FK_AttachmenttAssign_KB_Notes", "KB_Notes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<KB_Notes> KB_NotesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<KB_Notes>("BusinessSystemsModel.FK_AttachmenttAssign_KB_Notes", "KB_Notes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<KB_Notes>("BusinessSystemsModel.FK_AttachmenttAssign_KB_Notes", "KB_Notes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_AttachmenttAssign_Notes", "Notes")]
        public Notes Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Notes>("BusinessSystemsModel.FK_AttachmenttAssign_Notes", "Notes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Notes>("BusinessSystemsModel.FK_AttachmenttAssign_Notes", "Notes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Notes> NotesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Notes>("BusinessSystemsModel.FK_AttachmenttAssign_Notes", "Notes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Notes>("BusinessSystemsModel.FK_AttachmenttAssign_Notes", "Notes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BusinessSystemsModel", Name="CommunicationChannel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CommunicationChannel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CommunicationChannel object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="communicationChannelName">Initial value of the CommunicationChannelName property.</param>
        public static CommunicationChannel CreateCommunicationChannel(global::System.Int32 id, global::System.String communicationChannelName)
        {
            CommunicationChannel communicationChannel = new CommunicationChannel();
            communicationChannel.Id = id;
            communicationChannel.CommunicationChannelName = communicationChannelName;
            return communicationChannel;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CommunicationChannelName
        {
            get
            {
                return _CommunicationChannelName;
            }
            set
            {
                OnCommunicationChannelNameChanging(value);
                ReportPropertyChanging("CommunicationChannelName");
                _CommunicationChannelName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CommunicationChannelName");
                OnCommunicationChannelNameChanged();
            }
        }
        private global::System.String _CommunicationChannelName;
        partial void OnCommunicationChannelNameChanging(global::System.String value);
        partial void OnCommunicationChannelNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_Csr_CommunicationChannel", "Csr")]
        public EntityCollection<Csr> Csr
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Csr>("BusinessSystemsModel.FK_Csr_CommunicationChannel", "Csr");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Csr>("BusinessSystemsModel.FK_Csr_CommunicationChannel", "Csr", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BusinessSystemsModel", Name="CompaniesAssignment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompaniesAssignment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompaniesAssignment object.
        /// </summary>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="assignedCommpanyId">Initial value of the AssignedCommpanyId property.</param>
        public static CompaniesAssignment CreateCompaniesAssignment(global::System.Int32 companyId, global::System.Int32 assignedCommpanyId)
        {
            CompaniesAssignment companiesAssignment = new CompaniesAssignment();
            companiesAssignment.CompanyId = companyId;
            companiesAssignment.AssignedCommpanyId = assignedCommpanyId;
            return companiesAssignment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                if (_CompanyId != value)
                {
                    OnCompanyIdChanging(value);
                    ReportPropertyChanging("CompanyId");
                    _CompanyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyId");
                    OnCompanyIdChanged();
                }
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssignedCommpanyId
        {
            get
            {
                return _AssignedCommpanyId;
            }
            set
            {
                if (_AssignedCommpanyId != value)
                {
                    OnAssignedCommpanyIdChanging(value);
                    ReportPropertyChanging("AssignedCommpanyId");
                    _AssignedCommpanyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AssignedCommpanyId");
                    OnAssignedCommpanyIdChanged();
                }
            }
        }
        private global::System.Int32 _AssignedCommpanyId;
        partial void OnAssignedCommpanyIdChanging(global::System.Int32 value);
        partial void OnAssignedCommpanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_CompaniesAssignment_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("BusinessSystemsModel.FK_CompaniesAssignment_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("BusinessSystemsModel.FK_CompaniesAssignment_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("BusinessSystemsModel.FK_CompaniesAssignment_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("BusinessSystemsModel.FK_CompaniesAssignment_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_CompaniesAssignment_Company1", "Company")]
        public Company Company1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("BusinessSystemsModel.FK_CompaniesAssignment_Company1", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("BusinessSystemsModel.FK_CompaniesAssignment_Company1", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> Company1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("BusinessSystemsModel.FK_CompaniesAssignment_Company1", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("BusinessSystemsModel.FK_CompaniesAssignment_Company1", "Company", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BusinessSystemsModel", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Company object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="companyName">Initial value of the CompanyName property.</param>
        public static Company CreateCompany(global::System.Int32 id, global::System.String companyName)
        {
            Company company = new Company();
            company.Id = id;
            company.CompanyName = companyName;
            return company;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_CompaniesAssignment_Company", "CompaniesAssignment")]
        public EntityCollection<CompaniesAssignment> CompaniesAssignment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompaniesAssignment>("BusinessSystemsModel.FK_CompaniesAssignment_Company", "CompaniesAssignment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompaniesAssignment>("BusinessSystemsModel.FK_CompaniesAssignment_Company", "CompaniesAssignment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_CompaniesAssignment_Company1", "CompaniesAssignment")]
        public EntityCollection<CompaniesAssignment> CompaniesAssignment1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompaniesAssignment>("BusinessSystemsModel.FK_CompaniesAssignment_Company1", "CompaniesAssignment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompaniesAssignment>("BusinessSystemsModel.FK_CompaniesAssignment_Company1", "CompaniesAssignment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_CompanyPriorities_Company", "CompanyPriorities")]
        public EntityCollection<CompanyPriorities> CompanyPriorities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyPriorities>("BusinessSystemsModel.FK_CompanyPriorities_Company", "CompanyPriorities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyPriorities>("BusinessSystemsModel.FK_CompanyPriorities_Company", "CompanyPriorities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_CompanyStatuses_Company", "CompanyStatuses")]
        public EntityCollection<CompanyStatuses> CompanyStatuses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyStatuses>("BusinessSystemsModel.FK_CompanyStatuses_Company", "CompanyStatuses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyStatuses>("BusinessSystemsModel.FK_CompanyStatuses_Company", "CompanyStatuses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_ProductsInCompany_Company", "ProductsInCompany")]
        public EntityCollection<ProductsInCompany> ProductsInCompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductsInCompany>("BusinessSystemsModel.FK_ProductsInCompany_Company", "ProductsInCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductsInCompany>("BusinessSystemsModel.FK_ProductsInCompany_Company", "ProductsInCompany", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_Site_Company", "Site")]
        public EntityCollection<Site> Site
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Site>("BusinessSystemsModel.FK_Site_Company", "Site");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Site>("BusinessSystemsModel.FK_Site_Company", "Site", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_Csr_Company", "Csr")]
        public EntityCollection<Csr> Csr
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Csr>("BusinessSystemsModel.FK_Csr_Company", "Csr");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Csr>("BusinessSystemsModel.FK_Csr_Company", "Csr", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_User_Company", "User")]
        public EntityCollection<User> User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("BusinessSystemsModel.FK_User_Company", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("BusinessSystemsModel.FK_User_Company", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_IssueDomainInCompany_Company", "IssueDomainInCompany")]
        public EntityCollection<IssueDomainInCompany> IssueDomainInCompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IssueDomainInCompany>("BusinessSystemsModel.FK_IssueDomainInCompany_Company", "IssueDomainInCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IssueDomainInCompany>("BusinessSystemsModel.FK_IssueDomainInCompany_Company", "IssueDomainInCompany", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_RequesterTypeInCompany_RequesterTypeInCompany", "RequesterTypeInCompany")]
        public EntityCollection<RequesterTypeInCompany> RequesterTypeInCompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequesterTypeInCompany>("BusinessSystemsModel.FK_RequesterTypeInCompany_RequesterTypeInCompany", "RequesterTypeInCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequesterTypeInCompany>("BusinessSystemsModel.FK_RequesterTypeInCompany_RequesterTypeInCompany", "RequesterTypeInCompany", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BusinessSystemsModel", Name="CompanyPriorities")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyPriorities : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyPriorities object.
        /// </summary>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="priorityId">Initial value of the PriorityId property.</param>
        public static CompanyPriorities CreateCompanyPriorities(global::System.Int32 companyId, global::System.Int32 priorityId)
        {
            CompanyPriorities companyPriorities = new CompanyPriorities();
            companyPriorities.CompanyId = companyId;
            companyPriorities.PriorityId = priorityId;
            return companyPriorities;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                if (_CompanyId != value)
                {
                    OnCompanyIdChanging(value);
                    ReportPropertyChanging("CompanyId");
                    _CompanyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyId");
                    OnCompanyIdChanged();
                }
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PriorityId
        {
            get
            {
                return _PriorityId;
            }
            set
            {
                if (_PriorityId != value)
                {
                    OnPriorityIdChanging(value);
                    ReportPropertyChanging("PriorityId");
                    _PriorityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PriorityId");
                    OnPriorityIdChanged();
                }
            }
        }
        private global::System.Int32 _PriorityId;
        partial void OnPriorityIdChanging(global::System.Int32 value);
        partial void OnPriorityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_CompanyPriorities_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("BusinessSystemsModel.FK_CompanyPriorities_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("BusinessSystemsModel.FK_CompanyPriorities_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("BusinessSystemsModel.FK_CompanyPriorities_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("BusinessSystemsModel.FK_CompanyPriorities_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_CompanyPriorities_Priority", "Priority")]
        public Priority Priority
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Priority>("BusinessSystemsModel.FK_CompanyPriorities_Priority", "Priority").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Priority>("BusinessSystemsModel.FK_CompanyPriorities_Priority", "Priority").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Priority> PriorityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Priority>("BusinessSystemsModel.FK_CompanyPriorities_Priority", "Priority");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Priority>("BusinessSystemsModel.FK_CompanyPriorities_Priority", "Priority", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BusinessSystemsModel", Name="CompanyStatuses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyStatuses : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyStatuses object.
        /// </summary>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="statusId">Initial value of the StatusId property.</param>
        public static CompanyStatuses CreateCompanyStatuses(global::System.Int32 companyId, global::System.Int32 statusId)
        {
            CompanyStatuses companyStatuses = new CompanyStatuses();
            companyStatuses.CompanyId = companyId;
            companyStatuses.StatusId = statusId;
            return companyStatuses;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                if (_CompanyId != value)
                {
                    OnCompanyIdChanging(value);
                    ReportPropertyChanging("CompanyId");
                    _CompanyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyId");
                    OnCompanyIdChanged();
                }
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                if (_StatusId != value)
                {
                    OnStatusIdChanging(value);
                    ReportPropertyChanging("StatusId");
                    _StatusId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StatusId");
                    OnStatusIdChanged();
                }
            }
        }
        private global::System.Int32 _StatusId;
        partial void OnStatusIdChanging(global::System.Int32 value);
        partial void OnStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_CompanyStatuses_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("BusinessSystemsModel.FK_CompanyStatuses_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("BusinessSystemsModel.FK_CompanyStatuses_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("BusinessSystemsModel.FK_CompanyStatuses_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("BusinessSystemsModel.FK_CompanyStatuses_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_CompanyStatuses_Csr_Status", "Csr_Status")]
        public Csr_Status Csr_Status
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Csr_Status>("BusinessSystemsModel.FK_CompanyStatuses_Csr_Status", "Csr_Status").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Csr_Status>("BusinessSystemsModel.FK_CompanyStatuses_Csr_Status", "Csr_Status").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Csr_Status> Csr_StatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Csr_Status>("BusinessSystemsModel.FK_CompanyStatuses_Csr_Status", "Csr_Status");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Csr_Status>("BusinessSystemsModel.FK_CompanyStatuses_Csr_Status", "Csr_Status", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BusinessSystemsModel", Name="Contact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Contact object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        public static Contact CreateContact(global::System.Int32 id, global::System.String email)
        {
            Contact contact = new Contact();
            contact.Id = id;
            contact.Email = email;
            return contact;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fix1
        {
            get
            {
                return _Fix1;
            }
            set
            {
                OnFix1Changing(value);
                ReportPropertyChanging("Fix1");
                _Fix1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fix1");
                OnFix1Changed();
            }
        }
        private global::System.String _Fix1;
        partial void OnFix1Changing(global::System.String value);
        partial void OnFix1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fix2
        {
            get
            {
                return _Fix2;
            }
            set
            {
                OnFix2Changing(value);
                ReportPropertyChanging("Fix2");
                _Fix2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fix2");
                OnFix2Changed();
            }
        }
        private global::System.String _Fix2;
        partial void OnFix2Changing(global::System.String value);
        partial void OnFix2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mobile1
        {
            get
            {
                return _Mobile1;
            }
            set
            {
                OnMobile1Changing(value);
                ReportPropertyChanging("Mobile1");
                _Mobile1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Mobile1");
                OnMobile1Changed();
            }
        }
        private global::System.String _Mobile1;
        partial void OnMobile1Changing(global::System.String value);
        partial void OnMobile1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mobile2
        {
            get
            {
                return _Mobile2;
            }
            set
            {
                OnMobile2Changing(value);
                ReportPropertyChanging("Mobile2");
                _Mobile2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Mobile2");
                OnMobile2Changed();
            }
        }
        private global::System.String _Mobile2;
        partial void OnMobile2Changing(global::System.String value);
        partial void OnMobile2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_User_Contact", "User")]
        public EntityCollection<User> User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("BusinessSystemsModel.FK_User_Contact", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("BusinessSystemsModel.FK_User_Contact", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BusinessSystemsModel", Name="Csr")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Csr : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Csr object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="heading">Initial value of the Heading property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="siteId">Initial value of the SiteId property.</param>
        /// <param name="priorityId">Initial value of the PriorityId property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="statusId">Initial value of the StatusId property.</param>
        /// <param name="riskAnalysisPerformed">Initial value of the RiskAnalysisPerformed property.</param>
        public static Csr CreateCsr(global::System.Int32 id, global::System.String heading, global::System.String description, global::System.Int32 companyId, global::System.Int32 siteId, global::System.Int32 priorityId, global::System.Int32 productId, global::System.Int32 statusId, global::System.Boolean riskAnalysisPerformed)
        {
            Csr csr = new Csr();
            csr.Id = id;
            csr.Heading = heading;
            csr.Description = description;
            csr.CompanyId = companyId;
            csr.SiteId = siteId;
            csr.PriorityId = priorityId;
            csr.ProductId = productId;
            csr.StatusId = statusId;
            csr.RiskAnalysisPerformed = riskAnalysisPerformed;
            return csr;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CSRNumber
        {
            get
            {
                return _CSRNumber;
            }
            set
            {
                OnCSRNumberChanging(value);
                ReportPropertyChanging("CSRNumber");
                _CSRNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CSRNumber");
                OnCSRNumberChanged();
            }
        }
        private global::System.String _CSRNumber;
        partial void OnCSRNumberChanging(global::System.String value);
        partial void OnCSRNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CallDate
        {
            get
            {
                return _CallDate;
            }
            set
            {
                OnCallDateChanging(value);
                ReportPropertyChanging("CallDate");
                _CallDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CallDate");
                OnCallDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CallDate;
        partial void OnCallDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCallDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RegisterDate
        {
            get
            {
                return _RegisterDate;
            }
            set
            {
                OnRegisterDateChanging(value);
                ReportPropertyChanging("RegisterDate");
                _RegisterDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegisterDate");
                OnRegisterDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RegisterDate;
        partial void OnRegisterDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRegisterDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AnswerDate
        {
            get
            {
                return _AnswerDate;
            }
            set
            {
                OnAnswerDateChanging(value);
                ReportPropertyChanging("AnswerDate");
                _AnswerDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AnswerDate");
                OnAnswerDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _AnswerDate;
        partial void OnAnswerDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAnswerDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FinishDate
        {
            get
            {
                return _FinishDate;
            }
            set
            {
                OnFinishDateChanging(value);
                ReportPropertyChanging("FinishDate");
                _FinishDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinishDate");
                OnFinishDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FinishDate;
        partial void OnFinishDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFinishDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Heading
        {
            get
            {
                return _Heading;
            }
            set
            {
                OnHeadingChanging(value);
                ReportPropertyChanging("Heading");
                _Heading = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Heading");
                OnHeadingChanged();
            }
        }
        private global::System.String _Heading;
        partial void OnHeadingChanging(global::System.String value);
        partial void OnHeadingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Answer
        {
            get
            {
                return _Answer;
            }
            set
            {
                OnAnswerChanging(value);
                ReportPropertyChanging("Answer");
                _Answer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Answer");
                OnAnswerChanged();
            }
        }
        private global::System.String _Answer;
        partial void OnAnswerChanging(global::System.String value);
        partial void OnAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TroubleReport
        {
            get
            {
                return _TroubleReport;
            }
            set
            {
                OnTroubleReportChanging(value);
                ReportPropertyChanging("TroubleReport");
                _TroubleReport = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TroubleReport");
                OnTroubleReportChanged();
            }
        }
        private global::System.String _TroubleReport;
        partial void OnTroubleReportChanging(global::System.String value);
        partial void OnTroubleReportChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SiteId
        {
            get
            {
                return _SiteId;
            }
            set
            {
                OnSiteIdChanging(value);
                ReportPropertyChanging("SiteId");
                _SiteId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SiteId");
                OnSiteIdChanged();
            }
        }
        private global::System.Int32 _SiteId;
        partial void OnSiteIdChanging(global::System.Int32 value);
        partial void OnSiteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CallerId
        {
            get
            {
                return _CallerId;
            }
            set
            {
                OnCallerIdChanging(value);
                ReportPropertyChanging("CallerId");
                _CallerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CallerId");
                OnCallerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CallerId;
        partial void OnCallerIdChanging(Nullable<global::System.Int32> value);
        partial void OnCallerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PriorityId
        {
            get
            {
                return _PriorityId;
            }
            set
            {
                OnPriorityIdChanging(value);
                ReportPropertyChanging("PriorityId");
                _PriorityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriorityId");
                OnPriorityIdChanged();
            }
        }
        private global::System.Int32 _PriorityId;
        partial void OnPriorityIdChanging(global::System.Int32 value);
        partial void OnPriorityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                OnProductIdChanging(value);
                ReportPropertyChanging("ProductId");
                _ProductId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductId");
                OnProductIdChanged();
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CommunicationId
        {
            get
            {
                return _CommunicationId;
            }
            set
            {
                OnCommunicationIdChanging(value);
                ReportPropertyChanging("CommunicationId");
                _CommunicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommunicationId");
                OnCommunicationIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CommunicationId;
        partial void OnCommunicationIdChanging(Nullable<global::System.Int32> value);
        partial void OnCommunicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                OnStatusIdChanging(value);
                ReportPropertyChanging("StatusId");
                _StatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusId");
                OnStatusIdChanged();
            }
        }
        private global::System.Int32 _StatusId;
        partial void OnStatusIdChanging(global::System.Int32 value);
        partial void OnStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUserId
        {
            get
            {
                return _LastUserId;
            }
            set
            {
                OnLastUserIdChanging(value);
                ReportPropertyChanging("LastUserId");
                _LastUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUserId");
                OnLastUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUserId;
        partial void OnLastUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnLastUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SeverityId
        {
            get
            {
                return _SeverityId;
            }
            set
            {
                OnSeverityIdChanging(value);
                ReportPropertyChanging("SeverityId");
                _SeverityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SeverityId");
                OnSeverityIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SeverityId;
        partial void OnSeverityIdChanging(Nullable<global::System.Int32> value);
        partial void OnSeverityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FrequencyId
        {
            get
            {
                return _FrequencyId;
            }
            set
            {
                OnFrequencyIdChanging(value);
                ReportPropertyChanging("FrequencyId");
                _FrequencyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FrequencyId");
                OnFrequencyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FrequencyId;
        partial void OnFrequencyIdChanging(Nullable<global::System.Int32> value);
        partial void OnFrequencyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean RiskAnalysisPerformed
        {
            get
            {
                return _RiskAnalysisPerformed;
            }
            set
            {
                OnRiskAnalysisPerformedChanging(value);
                ReportPropertyChanging("RiskAnalysisPerformed");
                _RiskAnalysisPerformed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RiskAnalysisPerformed");
                OnRiskAnalysisPerformedChanged();
            }
        }
        private global::System.Boolean _RiskAnalysisPerformed;
        partial void OnRiskAnalysisPerformedChanging(global::System.Boolean value);
        partial void OnRiskAnalysisPerformedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RequesterTypeId
        {
            get
            {
                return _RequesterTypeId;
            }
            set
            {
                OnRequesterTypeIdChanging(value);
                ReportPropertyChanging("RequesterTypeId");
                _RequesterTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequesterTypeId");
                OnRequesterTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _RequesterTypeId;
        partial void OnRequesterTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnRequesterTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueDomainId
        {
            get
            {
                return _IssueDomainId;
            }
            set
            {
                OnIssueDomainIdChanging(value);
                ReportPropertyChanging("IssueDomainId");
                _IssueDomainId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueDomainId");
                OnIssueDomainIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueDomainId;
        partial void OnIssueDomainIdChanging(Nullable<global::System.Int32> value);
        partial void OnIssueDomainIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remedy
        {
            get
            {
                return _Remedy;
            }
            set
            {
                OnRemedyChanging(value);
                ReportPropertyChanging("Remedy");
                _Remedy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remedy");
                OnRemedyChanged();
            }
        }
        private global::System.String _Remedy;
        partial void OnRemedyChanging(global::System.String value);
        partial void OnRemedyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RemedyTime
        {
            get
            {
                return _RemedyTime;
            }
            set
            {
                OnRemedyTimeChanging(value);
                ReportPropertyChanging("RemedyTime");
                _RemedyTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RemedyTime");
                OnRemedyTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _RemedyTime;
        partial void OnRemedyTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnRemedyTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_AttachmenttAssign_Csr", "AttachmenttAssign")]
        public EntityCollection<AttachmenttAssign> AttachmenttAssign
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AttachmenttAssign>("BusinessSystemsModel.FK_AttachmenttAssign_Csr", "AttachmenttAssign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AttachmenttAssign>("BusinessSystemsModel.FK_AttachmenttAssign_Csr", "AttachmenttAssign", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_Csr_CommunicationChannel", "CommunicationChannel")]
        public CommunicationChannel CommunicationChannel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CommunicationChannel>("BusinessSystemsModel.FK_Csr_CommunicationChannel", "CommunicationChannel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CommunicationChannel>("BusinessSystemsModel.FK_Csr_CommunicationChannel", "CommunicationChannel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CommunicationChannel> CommunicationChannelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CommunicationChannel>("BusinessSystemsModel.FK_Csr_CommunicationChannel", "CommunicationChannel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CommunicationChannel>("BusinessSystemsModel.FK_Csr_CommunicationChannel", "CommunicationChannel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_Csr_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("BusinessSystemsModel.FK_Csr_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("BusinessSystemsModel.FK_Csr_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("BusinessSystemsModel.FK_Csr_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("BusinessSystemsModel.FK_Csr_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_Csr_Csr_Status", "Csr_Status")]
        public Csr_Status Csr_Status
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Csr_Status>("BusinessSystemsModel.FK_Csr_Csr_Status", "Csr_Status").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Csr_Status>("BusinessSystemsModel.FK_Csr_Csr_Status", "Csr_Status").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Csr_Status> Csr_StatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Csr_Status>("BusinessSystemsModel.FK_Csr_Csr_Status", "Csr_Status");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Csr_Status>("BusinessSystemsModel.FK_Csr_Csr_Status", "Csr_Status", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_Csr_Frequency", "Frequency")]
        public Frequency Frequency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Frequency>("BusinessSystemsModel.FK_Csr_Frequency", "Frequency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Frequency>("BusinessSystemsModel.FK_Csr_Frequency", "Frequency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Frequency> FrequencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Frequency>("BusinessSystemsModel.FK_Csr_Frequency", "Frequency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Frequency>("BusinessSystemsModel.FK_Csr_Frequency", "Frequency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_Csr_Priority", "Priority")]
        public Priority Priority
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Priority>("BusinessSystemsModel.FK_Csr_Priority", "Priority").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Priority>("BusinessSystemsModel.FK_Csr_Priority", "Priority").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Priority> PriorityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Priority>("BusinessSystemsModel.FK_Csr_Priority", "Priority");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Priority>("BusinessSystemsModel.FK_Csr_Priority", "Priority", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_Csr_Severity", "Severity")]
        public Severity Severity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Severity>("BusinessSystemsModel.FK_Csr_Severity", "Severity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Severity>("BusinessSystemsModel.FK_Csr_Severity", "Severity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Severity> SeverityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Severity>("BusinessSystemsModel.FK_Csr_Severity", "Severity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Severity>("BusinessSystemsModel.FK_Csr_Severity", "Severity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_Csr_Site", "Site")]
        public Site Site
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Site>("BusinessSystemsModel.FK_Csr_Site", "Site").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Site>("BusinessSystemsModel.FK_Csr_Site", "Site").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Site> SiteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Site>("BusinessSystemsModel.FK_Csr_Site", "Site");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Site>("BusinessSystemsModel.FK_Csr_Site", "Site", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_Csr_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BusinessSystemsModel.FK_Csr_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BusinessSystemsModel.FK_Csr_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BusinessSystemsModel.FK_Csr_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BusinessSystemsModel.FK_Csr_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_KB_Notes_Csr", "KB_Notes")]
        public EntityCollection<KB_Notes> KB_Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<KB_Notes>("BusinessSystemsModel.FK_KB_Notes_Csr", "KB_Notes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<KB_Notes>("BusinessSystemsModel.FK_KB_Notes_Csr", "KB_Notes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_Notes_Csr", "Notes")]
        public EntityCollection<Notes> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Notes>("BusinessSystemsModel.FK_Notes_Csr", "Notes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Notes>("BusinessSystemsModel.FK_Notes_Csr", "Notes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_Csr_Product", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("BusinessSystemsModel.FK_Csr_Product", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("BusinessSystemsModel.FK_Csr_Product", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("BusinessSystemsModel.FK_Csr_Product", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("BusinessSystemsModel.FK_Csr_Product", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_Csr_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BusinessSystemsModel.FK_Csr_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BusinessSystemsModel.FK_Csr_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BusinessSystemsModel.FK_Csr_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BusinessSystemsModel.FK_Csr_User1", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_Csr_User2", "User")]
        public User User2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BusinessSystemsModel.FK_Csr_User2", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BusinessSystemsModel.FK_Csr_User2", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BusinessSystemsModel.FK_Csr_User2", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BusinessSystemsModel.FK_Csr_User2", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_Csr_IssueDomain", "IssueDomain")]
        public IssueDomain IssueDomain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueDomain>("BusinessSystemsModel.FK_Csr_IssueDomain", "IssueDomain").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueDomain>("BusinessSystemsModel.FK_Csr_IssueDomain", "IssueDomain").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IssueDomain> IssueDomainReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueDomain>("BusinessSystemsModel.FK_Csr_IssueDomain", "IssueDomain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IssueDomain>("BusinessSystemsModel.FK_Csr_IssueDomain", "IssueDomain", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_Csr_RequesterType", "RequesterType")]
        public RequesterType RequesterType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RequesterType>("BusinessSystemsModel.FK_Csr_RequesterType", "RequesterType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RequesterType>("BusinessSystemsModel.FK_Csr_RequesterType", "RequesterType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RequesterType> RequesterTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RequesterType>("BusinessSystemsModel.FK_Csr_RequesterType", "RequesterType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RequesterType>("BusinessSystemsModel.FK_Csr_RequesterType", "RequesterType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BusinessSystemsModel", Name="Csr_Status")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Csr_Status : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Csr_Status object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="statusName">Initial value of the StatusName property.</param>
        public static Csr_Status CreateCsr_Status(global::System.Int32 id, global::System.String statusName)
        {
            Csr_Status csr_Status = new Csr_Status();
            csr_Status.Id = id;
            csr_Status.StatusName = statusName;
            return csr_Status;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StatusName
        {
            get
            {
                return _StatusName;
            }
            set
            {
                OnStatusNameChanging(value);
                ReportPropertyChanging("StatusName");
                _StatusName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StatusName");
                OnStatusNameChanged();
            }
        }
        private global::System.String _StatusName;
        partial void OnStatusNameChanging(global::System.String value);
        partial void OnStatusNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_CompanyStatuses_Csr_Status", "CompanyStatuses")]
        public EntityCollection<CompanyStatuses> CompanyStatuses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyStatuses>("BusinessSystemsModel.FK_CompanyStatuses_Csr_Status", "CompanyStatuses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyStatuses>("BusinessSystemsModel.FK_CompanyStatuses_Csr_Status", "CompanyStatuses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_Csr_Csr_Status", "Csr")]
        public EntityCollection<Csr> Csr
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Csr>("BusinessSystemsModel.FK_Csr_Csr_Status", "Csr");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Csr>("BusinessSystemsModel.FK_Csr_Csr_Status", "Csr", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BusinessSystemsModel", Name="Frequency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Frequency : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Frequency object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="frequencyName">Initial value of the FrequencyName property.</param>
        public static Frequency CreateFrequency(global::System.Int32 id, global::System.String frequencyName)
        {
            Frequency frequency = new Frequency();
            frequency.Id = id;
            frequency.FrequencyName = frequencyName;
            return frequency;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FrequencyName
        {
            get
            {
                return _FrequencyName;
            }
            set
            {
                OnFrequencyNameChanging(value);
                ReportPropertyChanging("FrequencyName");
                _FrequencyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FrequencyName");
                OnFrequencyNameChanged();
            }
        }
        private global::System.String _FrequencyName;
        partial void OnFrequencyNameChanging(global::System.String value);
        partial void OnFrequencyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_Csr_Frequency", "Csr")]
        public EntityCollection<Csr> Csr
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Csr>("BusinessSystemsModel.FK_Csr_Frequency", "Csr");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Csr>("BusinessSystemsModel.FK_Csr_Frequency", "Csr", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BusinessSystemsModel", Name="IssueDomain")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IssueDomain : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IssueDomain object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static IssueDomain CreateIssueDomain(global::System.Int32 id, global::System.String name)
        {
            IssueDomain issueDomain = new IssueDomain();
            issueDomain.Id = id;
            issueDomain.Name = name;
            return issueDomain;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_Csr_IssueDomain", "Csr")]
        public EntityCollection<Csr> Csr
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Csr>("BusinessSystemsModel.FK_Csr_IssueDomain", "Csr");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Csr>("BusinessSystemsModel.FK_Csr_IssueDomain", "Csr", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_IssueDomainInCompany_IssueDomain", "IssueDomainInCompany")]
        public EntityCollection<IssueDomainInCompany> IssueDomainInCompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IssueDomainInCompany>("BusinessSystemsModel.FK_IssueDomainInCompany_IssueDomain", "IssueDomainInCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IssueDomainInCompany>("BusinessSystemsModel.FK_IssueDomainInCompany_IssueDomain", "IssueDomainInCompany", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_IssueDomain_IssueDomain", "IssueDomain1")]
        public IssueDomain IssueDomain1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueDomain>("BusinessSystemsModel.FK_IssueDomain_IssueDomain", "IssueDomain1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueDomain>("BusinessSystemsModel.FK_IssueDomain_IssueDomain", "IssueDomain1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IssueDomain> IssueDomain1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueDomain>("BusinessSystemsModel.FK_IssueDomain_IssueDomain", "IssueDomain1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IssueDomain>("BusinessSystemsModel.FK_IssueDomain_IssueDomain", "IssueDomain1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_IssueDomain_IssueDomain", "IssueDomain")]
        public IssueDomain IssueDomain2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueDomain>("BusinessSystemsModel.FK_IssueDomain_IssueDomain", "IssueDomain").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueDomain>("BusinessSystemsModel.FK_IssueDomain_IssueDomain", "IssueDomain").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IssueDomain> IssueDomain2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueDomain>("BusinessSystemsModel.FK_IssueDomain_IssueDomain", "IssueDomain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IssueDomain>("BusinessSystemsModel.FK_IssueDomain_IssueDomain", "IssueDomain", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BusinessSystemsModel", Name="IssueDomainInCompany")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IssueDomainInCompany : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IssueDomainInCompany object.
        /// </summary>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="issueDomainId">Initial value of the IssueDomainId property.</param>
        public static IssueDomainInCompany CreateIssueDomainInCompany(global::System.Int32 companyId, global::System.Int32 issueDomainId)
        {
            IssueDomainInCompany issueDomainInCompany = new IssueDomainInCompany();
            issueDomainInCompany.CompanyId = companyId;
            issueDomainInCompany.IssueDomainId = issueDomainId;
            return issueDomainInCompany;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                if (_CompanyId != value)
                {
                    OnCompanyIdChanging(value);
                    ReportPropertyChanging("CompanyId");
                    _CompanyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyId");
                    OnCompanyIdChanged();
                }
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueDomainId
        {
            get
            {
                return _IssueDomainId;
            }
            set
            {
                if (_IssueDomainId != value)
                {
                    OnIssueDomainIdChanging(value);
                    ReportPropertyChanging("IssueDomainId");
                    _IssueDomainId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IssueDomainId");
                    OnIssueDomainIdChanged();
                }
            }
        }
        private global::System.Int32 _IssueDomainId;
        partial void OnIssueDomainIdChanging(global::System.Int32 value);
        partial void OnIssueDomainIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_IssueDomainInCompany_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("BusinessSystemsModel.FK_IssueDomainInCompany_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("BusinessSystemsModel.FK_IssueDomainInCompany_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("BusinessSystemsModel.FK_IssueDomainInCompany_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("BusinessSystemsModel.FK_IssueDomainInCompany_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_IssueDomainInCompany_IssueDomain", "IssueDomain")]
        public IssueDomain IssueDomain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueDomain>("BusinessSystemsModel.FK_IssueDomainInCompany_IssueDomain", "IssueDomain").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueDomain>("BusinessSystemsModel.FK_IssueDomainInCompany_IssueDomain", "IssueDomain").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IssueDomain> IssueDomainReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueDomain>("BusinessSystemsModel.FK_IssueDomainInCompany_IssueDomain", "IssueDomain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IssueDomain>("BusinessSystemsModel.FK_IssueDomainInCompany_IssueDomain", "IssueDomain", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BusinessSystemsModel", Name="KB_Notes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class KB_Notes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new KB_Notes object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="csrId">Initial value of the CsrId property.</param>
        /// <param name="heading">Initial value of the Heading property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="note">Initial value of the Note property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="autorId">Initial value of the AutorId property.</param>
        public static KB_Notes CreateKB_Notes(global::System.Int32 id, global::System.Int32 csrId, global::System.String heading, global::System.String description, global::System.String note, global::System.DateTime date, global::System.Int32 productId, global::System.Int32 autorId)
        {
            KB_Notes kB_Notes = new KB_Notes();
            kB_Notes.Id = id;
            kB_Notes.CsrId = csrId;
            kB_Notes.Heading = heading;
            kB_Notes.Description = description;
            kB_Notes.Note = note;
            kB_Notes.Date = date;
            kB_Notes.ProductId = productId;
            kB_Notes.AutorId = autorId;
            return kB_Notes;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CsrId
        {
            get
            {
                return _CsrId;
            }
            set
            {
                OnCsrIdChanging(value);
                ReportPropertyChanging("CsrId");
                _CsrId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CsrId");
                OnCsrIdChanged();
            }
        }
        private global::System.Int32 _CsrId;
        partial void OnCsrIdChanging(global::System.Int32 value);
        partial void OnCsrIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Heading
        {
            get
            {
                return _Heading;
            }
            set
            {
                OnHeadingChanging(value);
                ReportPropertyChanging("Heading");
                _Heading = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Heading");
                OnHeadingChanged();
            }
        }
        private global::System.String _Heading;
        partial void OnHeadingChanging(global::System.String value);
        partial void OnHeadingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                OnProductIdChanging(value);
                ReportPropertyChanging("ProductId");
                _ProductId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductId");
                OnProductIdChanged();
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AutorId
        {
            get
            {
                return _AutorId;
            }
            set
            {
                OnAutorIdChanging(value);
                ReportPropertyChanging("AutorId");
                _AutorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutorId");
                OnAutorIdChanged();
            }
        }
        private global::System.Int32 _AutorId;
        partial void OnAutorIdChanging(global::System.Int32 value);
        partial void OnAutorIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_AttachmenttAssign_KB_Notes", "AttachmenttAssign")]
        public EntityCollection<AttachmenttAssign> AttachmenttAssign
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AttachmenttAssign>("BusinessSystemsModel.FK_AttachmenttAssign_KB_Notes", "AttachmenttAssign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AttachmenttAssign>("BusinessSystemsModel.FK_AttachmenttAssign_KB_Notes", "AttachmenttAssign", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_KB_Notes_Csr", "Csr")]
        public Csr Csr
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Csr>("BusinessSystemsModel.FK_KB_Notes_Csr", "Csr").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Csr>("BusinessSystemsModel.FK_KB_Notes_Csr", "Csr").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Csr> CsrReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Csr>("BusinessSystemsModel.FK_KB_Notes_Csr", "Csr");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Csr>("BusinessSystemsModel.FK_KB_Notes_Csr", "Csr", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_KB_Notes_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BusinessSystemsModel.FK_KB_Notes_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BusinessSystemsModel.FK_KB_Notes_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BusinessSystemsModel.FK_KB_Notes_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BusinessSystemsModel.FK_KB_Notes_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_KB_Notes_Product", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("BusinessSystemsModel.FK_KB_Notes_Product", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("BusinessSystemsModel.FK_KB_Notes_Product", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("BusinessSystemsModel.FK_KB_Notes_Product", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("BusinessSystemsModel.FK_KB_Notes_Product", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BusinessSystemsModel", Name="Localization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Localization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Localization object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="cultureCode">Initial value of the CultureCode property.</param>
        public static Localization CreateLocalization(global::System.Int32 id, global::System.String cultureCode)
        {
            Localization localization = new Localization();
            localization.Id = id;
            localization.CultureCode = cultureCode;
            return localization;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CultureCode
        {
            get
            {
                return _CultureCode;
            }
            set
            {
                OnCultureCodeChanging(value);
                ReportPropertyChanging("CultureCode");
                _CultureCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CultureCode");
                OnCultureCodeChanged();
            }
        }
        private global::System.String _CultureCode;
        partial void OnCultureCodeChanging(global::System.String value);
        partial void OnCultureCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_User_Localization", "User")]
        public EntityCollection<User> User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("BusinessSystemsModel.FK_User_Localization", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("BusinessSystemsModel.FK_User_Localization", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BusinessSystemsModel", Name="Notes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Notes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Notes object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="csrId">Initial value of the CsrId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="autorId">Initial value of the AutorId property.</param>
        public static Notes CreateNotes(global::System.Int32 id, global::System.Int32 csrId, global::System.DateTime date, global::System.Int32 autorId)
        {
            Notes notes = new Notes();
            notes.Id = id;
            notes.CsrId = csrId;
            notes.Date = date;
            notes.AutorId = autorId;
            return notes;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CsrId
        {
            get
            {
                return _CsrId;
            }
            set
            {
                OnCsrIdChanging(value);
                ReportPropertyChanging("CsrId");
                _CsrId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CsrId");
                OnCsrIdChanged();
            }
        }
        private global::System.Int32 _CsrId;
        partial void OnCsrIdChanging(global::System.Int32 value);
        partial void OnCsrIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Heading
        {
            get
            {
                return _Heading;
            }
            set
            {
                OnHeadingChanging(value);
                ReportPropertyChanging("Heading");
                _Heading = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Heading");
                OnHeadingChanged();
            }
        }
        private global::System.String _Heading;
        partial void OnHeadingChanging(global::System.String value);
        partial void OnHeadingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AutorId
        {
            get
            {
                return _AutorId;
            }
            set
            {
                OnAutorIdChanging(value);
                ReportPropertyChanging("AutorId");
                _AutorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutorId");
                OnAutorIdChanged();
            }
        }
        private global::System.Int32 _AutorId;
        partial void OnAutorIdChanging(global::System.Int32 value);
        partial void OnAutorIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_AttachmenttAssign_Notes", "AttachmenttAssign")]
        public EntityCollection<AttachmenttAssign> AttachmenttAssign
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AttachmenttAssign>("BusinessSystemsModel.FK_AttachmenttAssign_Notes", "AttachmenttAssign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AttachmenttAssign>("BusinessSystemsModel.FK_AttachmenttAssign_Notes", "AttachmenttAssign", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_Notes_Csr", "Csr")]
        public Csr Csr
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Csr>("BusinessSystemsModel.FK_Notes_Csr", "Csr").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Csr>("BusinessSystemsModel.FK_Notes_Csr", "Csr").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Csr> CsrReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Csr>("BusinessSystemsModel.FK_Notes_Csr", "Csr");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Csr>("BusinessSystemsModel.FK_Notes_Csr", "Csr", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_Notes_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BusinessSystemsModel.FK_Notes_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BusinessSystemsModel.FK_Notes_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BusinessSystemsModel.FK_Notes_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BusinessSystemsModel.FK_Notes_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BusinessSystemsModel", Name="Priority")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Priority : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Priority object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="priorityName">Initial value of the PriorityName property.</param>
        public static Priority CreatePriority(global::System.Int32 id, global::System.String priorityName)
        {
            Priority priority = new Priority();
            priority.Id = id;
            priority.PriorityName = priorityName;
            return priority;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PriorityName
        {
            get
            {
                return _PriorityName;
            }
            set
            {
                OnPriorityNameChanging(value);
                ReportPropertyChanging("PriorityName");
                _PriorityName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PriorityName");
                OnPriorityNameChanged();
            }
        }
        private global::System.String _PriorityName;
        partial void OnPriorityNameChanging(global::System.String value);
        partial void OnPriorityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_CompanyPriorities_Priority", "CompanyPriorities")]
        public EntityCollection<CompanyPriorities> CompanyPriorities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyPriorities>("BusinessSystemsModel.FK_CompanyPriorities_Priority", "CompanyPriorities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyPriorities>("BusinessSystemsModel.FK_CompanyPriorities_Priority", "CompanyPriorities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_Csr_Priority", "Csr")]
        public EntityCollection<Csr> Csr
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Csr>("BusinessSystemsModel.FK_Csr_Priority", "Csr");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Csr>("BusinessSystemsModel.FK_Csr_Priority", "Csr", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BusinessSystemsModel", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="productName">Initial value of the ProductName property.</param>
        public static Product CreateProduct(global::System.Int32 id, global::System.String productName)
        {
            Product product = new Product();
            product.Id = id;
            product.ProductName = productName;
            return product;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                OnProductNameChanging(value);
                ReportPropertyChanging("ProductName");
                _ProductName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductName");
                OnProductNameChanged();
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_ProductsInCompany_Product", "ProductsInCompany")]
        public EntityCollection<ProductsInCompany> ProductsInCompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductsInCompany>("BusinessSystemsModel.FK_ProductsInCompany_Product", "ProductsInCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductsInCompany>("BusinessSystemsModel.FK_ProductsInCompany_Product", "ProductsInCompany", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_KB_Notes_Product", "KB_Notes")]
        public EntityCollection<KB_Notes> KB_Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<KB_Notes>("BusinessSystemsModel.FK_KB_Notes_Product", "KB_Notes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<KB_Notes>("BusinessSystemsModel.FK_KB_Notes_Product", "KB_Notes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_Csr_Product", "Csr")]
        public EntityCollection<Csr> Csr
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Csr>("BusinessSystemsModel.FK_Csr_Product", "Csr");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Csr>("BusinessSystemsModel.FK_Csr_Product", "Csr", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BusinessSystemsModel", Name="ProductsInCompany")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductsInCompany : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductsInCompany object.
        /// </summary>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        public static ProductsInCompany CreateProductsInCompany(global::System.Int32 companyId, global::System.Int32 productId)
        {
            ProductsInCompany productsInCompany = new ProductsInCompany();
            productsInCompany.CompanyId = companyId;
            productsInCompany.ProductId = productId;
            return productsInCompany;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                if (_CompanyId != value)
                {
                    OnCompanyIdChanging(value);
                    ReportPropertyChanging("CompanyId");
                    _CompanyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyId");
                    OnCompanyIdChanged();
                }
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                if (_ProductId != value)
                {
                    OnProductIdChanging(value);
                    ReportPropertyChanging("ProductId");
                    _ProductId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductId");
                    OnProductIdChanged();
                }
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_ProductsInCompany_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("BusinessSystemsModel.FK_ProductsInCompany_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("BusinessSystemsModel.FK_ProductsInCompany_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("BusinessSystemsModel.FK_ProductsInCompany_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("BusinessSystemsModel.FK_ProductsInCompany_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_ProductsInCompany_Product", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("BusinessSystemsModel.FK_ProductsInCompany_Product", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("BusinessSystemsModel.FK_ProductsInCompany_Product", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("BusinessSystemsModel.FK_ProductsInCompany_Product", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("BusinessSystemsModel.FK_ProductsInCompany_Product", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BusinessSystemsModel", Name="RequesterType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RequesterType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RequesterType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static RequesterType CreateRequesterType(global::System.Int32 id, global::System.String name)
        {
            RequesterType requesterType = new RequesterType();
            requesterType.Id = id;
            requesterType.Name = name;
            return requesterType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_Csr_RequesterType", "Csr")]
        public EntityCollection<Csr> Csr
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Csr>("BusinessSystemsModel.FK_Csr_RequesterType", "Csr");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Csr>("BusinessSystemsModel.FK_Csr_RequesterType", "Csr", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_RequesterTypeInCompany_RequesterType", "RequesterTypeInCompany")]
        public EntityCollection<RequesterTypeInCompany> RequesterTypeInCompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequesterTypeInCompany>("BusinessSystemsModel.FK_RequesterTypeInCompany_RequesterType", "RequesterTypeInCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequesterTypeInCompany>("BusinessSystemsModel.FK_RequesterTypeInCompany_RequesterType", "RequesterTypeInCompany", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BusinessSystemsModel", Name="RequesterTypeInCompany")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RequesterTypeInCompany : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RequesterTypeInCompany object.
        /// </summary>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="requesterTypeId">Initial value of the RequesterTypeId property.</param>
        public static RequesterTypeInCompany CreateRequesterTypeInCompany(global::System.Int32 companyId, global::System.Int32 requesterTypeId)
        {
            RequesterTypeInCompany requesterTypeInCompany = new RequesterTypeInCompany();
            requesterTypeInCompany.CompanyId = companyId;
            requesterTypeInCompany.RequesterTypeId = requesterTypeId;
            return requesterTypeInCompany;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                if (_CompanyId != value)
                {
                    OnCompanyIdChanging(value);
                    ReportPropertyChanging("CompanyId");
                    _CompanyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyId");
                    OnCompanyIdChanged();
                }
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RequesterTypeId
        {
            get
            {
                return _RequesterTypeId;
            }
            set
            {
                if (_RequesterTypeId != value)
                {
                    OnRequesterTypeIdChanging(value);
                    ReportPropertyChanging("RequesterTypeId");
                    _RequesterTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RequesterTypeId");
                    OnRequesterTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _RequesterTypeId;
        partial void OnRequesterTypeIdChanging(global::System.Int32 value);
        partial void OnRequesterTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_RequesterTypeInCompany_RequesterTypeInCompany", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("BusinessSystemsModel.FK_RequesterTypeInCompany_RequesterTypeInCompany", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("BusinessSystemsModel.FK_RequesterTypeInCompany_RequesterTypeInCompany", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("BusinessSystemsModel.FK_RequesterTypeInCompany_RequesterTypeInCompany", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("BusinessSystemsModel.FK_RequesterTypeInCompany_RequesterTypeInCompany", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_RequesterTypeInCompany_RequesterType", "RequesterType")]
        public RequesterType RequesterType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RequesterType>("BusinessSystemsModel.FK_RequesterTypeInCompany_RequesterType", "RequesterType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RequesterType>("BusinessSystemsModel.FK_RequesterTypeInCompany_RequesterType", "RequesterType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RequesterType> RequesterTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RequesterType>("BusinessSystemsModel.FK_RequesterTypeInCompany_RequesterType", "RequesterType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RequesterType>("BusinessSystemsModel.FK_RequesterTypeInCompany_RequesterType", "RequesterType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BusinessSystemsModel", Name="Severity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Severity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Severity object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="severityName">Initial value of the SeverityName property.</param>
        public static Severity CreateSeverity(global::System.Int32 id, global::System.String severityName)
        {
            Severity severity = new Severity();
            severity.Id = id;
            severity.SeverityName = severityName;
            return severity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SeverityName
        {
            get
            {
                return _SeverityName;
            }
            set
            {
                OnSeverityNameChanging(value);
                ReportPropertyChanging("SeverityName");
                _SeverityName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SeverityName");
                OnSeverityNameChanged();
            }
        }
        private global::System.String _SeverityName;
        partial void OnSeverityNameChanging(global::System.String value);
        partial void OnSeverityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_Csr_Severity", "Csr")]
        public EntityCollection<Csr> Csr
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Csr>("BusinessSystemsModel.FK_Csr_Severity", "Csr");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Csr>("BusinessSystemsModel.FK_Csr_Severity", "Csr", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BusinessSystemsModel", Name="Site")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Site : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Site object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="siteName">Initial value of the SiteName property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        public static Site CreateSite(global::System.Int32 id, global::System.String siteName, global::System.Int32 companyId)
        {
            Site site = new Site();
            site.Id = id;
            site.SiteName = siteName;
            site.CompanyId = companyId;
            return site;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SiteName
        {
            get
            {
                return _SiteName;
            }
            set
            {
                OnSiteNameChanging(value);
                ReportPropertyChanging("SiteName");
                _SiteName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SiteName");
                OnSiteNameChanged();
            }
        }
        private global::System.String _SiteName;
        partial void OnSiteNameChanging(global::System.String value);
        partial void OnSiteNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_Site_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("BusinessSystemsModel.FK_Site_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("BusinessSystemsModel.FK_Site_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("BusinessSystemsModel.FK_Site_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("BusinessSystemsModel.FK_Site_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_Csr_Site", "Csr")]
        public EntityCollection<Csr> Csr
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Csr>("BusinessSystemsModel.FK_Csr_Site", "Csr");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Csr>("BusinessSystemsModel.FK_Csr_Site", "Csr", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BusinessSystemsModel", Name="sysdiagrams")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagrams : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagrams object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagrams Createsysdiagrams(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagrams sysdiagrams = new sysdiagrams();
            sysdiagrams.name = name;
            sysdiagrams.principal_id = principal_id;
            sysdiagrams.diagram_id = diagram_id;
            return sysdiagrams;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BusinessSystemsModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="typeId">Initial value of the TypeId property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="contactId">Initial value of the ContactId property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.Int32 typeId, global::System.String firstName, global::System.String lastName, global::System.String userName, global::System.Int32 contactId, global::System.Int32 companyId)
        {
            User user = new User();
            user.Id = id;
            user.TypeId = typeId;
            user.FirstName = firstName;
            user.LastName = lastName;
            user.UserName = userName;
            user.ContactId = contactId;
            user.CompanyId = companyId;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeId
        {
            get
            {
                return _TypeId;
            }
            set
            {
                OnTypeIdChanging(value);
                ReportPropertyChanging("TypeId");
                _TypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeId");
                OnTypeIdChanged();
            }
        }
        private global::System.Int32 _TypeId;
        partial void OnTypeIdChanging(global::System.Int32 value);
        partial void OnTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactId
        {
            get
            {
                return _ContactId;
            }
            set
            {
                OnContactIdChanging(value);
                ReportPropertyChanging("ContactId");
                _ContactId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContactId");
                OnContactIdChanged();
            }
        }
        private global::System.Int32 _ContactId;
        partial void OnContactIdChanging(global::System.Int32 value);
        partial void OnContactIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CultureId
        {
            get
            {
                return _CultureId;
            }
            set
            {
                OnCultureIdChanging(value);
                ReportPropertyChanging("CultureId");
                _CultureId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CultureId");
                OnCultureIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CultureId;
        partial void OnCultureIdChanging(Nullable<global::System.Int32> value);
        partial void OnCultureIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_User_Contact", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("BusinessSystemsModel.FK_User_Contact", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("BusinessSystemsModel.FK_User_Contact", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("BusinessSystemsModel.FK_User_Contact", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("BusinessSystemsModel.FK_User_Contact", "Contact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_User_UserType", "UserType")]
        public UserType UserType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserType>("BusinessSystemsModel.FK_User_UserType", "UserType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserType>("BusinessSystemsModel.FK_User_UserType", "UserType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserType> UserTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserType>("BusinessSystemsModel.FK_User_UserType", "UserType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserType>("BusinessSystemsModel.FK_User_UserType", "UserType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_UserNotifications_User", "UserNotifications")]
        public EntityCollection<UserNotifications> UserNotifications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserNotifications>("BusinessSystemsModel.FK_UserNotifications_User", "UserNotifications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserNotifications>("BusinessSystemsModel.FK_UserNotifications_User", "UserNotifications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_User_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("BusinessSystemsModel.FK_User_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("BusinessSystemsModel.FK_User_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("BusinessSystemsModel.FK_User_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("BusinessSystemsModel.FK_User_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_Csr_User", "Csr")]
        public EntityCollection<Csr> Csr
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Csr>("BusinessSystemsModel.FK_Csr_User", "Csr");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Csr>("BusinessSystemsModel.FK_Csr_User", "Csr", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_UserLogging_User", "UserLogging")]
        public EntityCollection<UserLogging> UserLogging
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserLogging>("BusinessSystemsModel.FK_UserLogging_User", "UserLogging");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserLogging>("BusinessSystemsModel.FK_UserLogging_User", "UserLogging", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_KB_Notes_User", "KB_Notes")]
        public EntityCollection<KB_Notes> KB_Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<KB_Notes>("BusinessSystemsModel.FK_KB_Notes_User", "KB_Notes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<KB_Notes>("BusinessSystemsModel.FK_KB_Notes_User", "KB_Notes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_Notes_User", "Notes")]
        public EntityCollection<Notes> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Notes>("BusinessSystemsModel.FK_Notes_User", "Notes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Notes>("BusinessSystemsModel.FK_Notes_User", "Notes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_Csr_User1", "Csr")]
        public EntityCollection<Csr> Csr1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Csr>("BusinessSystemsModel.FK_Csr_User1", "Csr");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Csr>("BusinessSystemsModel.FK_Csr_User1", "Csr", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_Csr_User2", "Csr")]
        public EntityCollection<Csr> Csr2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Csr>("BusinessSystemsModel.FK_Csr_User2", "Csr");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Csr>("BusinessSystemsModel.FK_Csr_User2", "Csr", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_User_Localization", "Localization")]
        public Localization Localization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Localization>("BusinessSystemsModel.FK_User_Localization", "Localization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Localization>("BusinessSystemsModel.FK_User_Localization", "Localization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Localization> LocalizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Localization>("BusinessSystemsModel.FK_User_Localization", "Localization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Localization>("BusinessSystemsModel.FK_User_Localization", "Localization", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BusinessSystemsModel", Name="UserLogging")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserLogging : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserLogging object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="logInTime">Initial value of the LogInTime property.</param>
        public static UserLogging CreateUserLogging(global::System.Int32 id, global::System.Int32 userId, global::System.DateTime logInTime)
        {
            UserLogging userLogging = new UserLogging();
            userLogging.Id = id;
            userLogging.UserId = userId;
            userLogging.LogInTime = logInTime;
            return userLogging;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LogInTime
        {
            get
            {
                return _LogInTime;
            }
            set
            {
                OnLogInTimeChanging(value);
                ReportPropertyChanging("LogInTime");
                _LogInTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LogInTime");
                OnLogInTimeChanged();
            }
        }
        private global::System.DateTime _LogInTime;
        partial void OnLogInTimeChanging(global::System.DateTime value);
        partial void OnLogInTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LogOutTime
        {
            get
            {
                return _LogOutTime;
            }
            set
            {
                OnLogOutTimeChanging(value);
                ReportPropertyChanging("LogOutTime");
                _LogOutTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LogOutTime");
                OnLogOutTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _LogOutTime;
        partial void OnLogOutTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnLogOutTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_UserLogging_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BusinessSystemsModel.FK_UserLogging_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BusinessSystemsModel.FK_UserLogging_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BusinessSystemsModel.FK_UserLogging_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BusinessSystemsModel.FK_UserLogging_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BusinessSystemsModel", Name="UserNotifications")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserNotifications : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserNotifications object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        public static UserNotifications CreateUserNotifications(global::System.Int32 userId, global::System.Int32 companyId)
        {
            UserNotifications userNotifications = new UserNotifications();
            userNotifications.UserId = userId;
            userNotifications.CompanyId = companyId;
            return userNotifications;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                if (_CompanyId != value)
                {
                    OnCompanyIdChanging(value);
                    ReportPropertyChanging("CompanyId");
                    _CompanyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyId");
                    OnCompanyIdChanged();
                }
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_UserNotifications_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BusinessSystemsModel.FK_UserNotifications_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BusinessSystemsModel.FK_UserNotifications_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BusinessSystemsModel.FK_UserNotifications_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BusinessSystemsModel.FK_UserNotifications_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BusinessSystemsModel", Name="UserType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="typeName">Initial value of the TypeName property.</param>
        public static UserType CreateUserType(global::System.Int32 id, global::System.String typeName)
        {
            UserType userType = new UserType();
            userType.Id = id;
            userType.TypeName = typeName;
            return userType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BusinessSystemsModel", "FK_User_UserType", "User")]
        public EntityCollection<User> User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("BusinessSystemsModel.FK_User_UserType", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("BusinessSystemsModel.FK_User_UserType", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BusinessSystemsModel", Name="vw_SitesWithCompany")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_SitesWithCompany : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_SitesWithCompany object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="siteName">Initial value of the SiteName property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        public static vw_SitesWithCompany Createvw_SitesWithCompany(global::System.Int32 id, global::System.String siteName, global::System.Int32 companyId)
        {
            vw_SitesWithCompany vw_SitesWithCompany = new vw_SitesWithCompany();
            vw_SitesWithCompany.Id = id;
            vw_SitesWithCompany.SiteName = siteName;
            vw_SitesWithCompany.CompanyId = companyId;
            return vw_SitesWithCompany;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SiteName
        {
            get
            {
                return _SiteName;
            }
            set
            {
                if (_SiteName != value)
                {
                    OnSiteNameChanging(value);
                    ReportPropertyChanging("SiteName");
                    _SiteName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SiteName");
                    OnSiteNameChanged();
                }
            }
        }
        private global::System.String _SiteName;
        partial void OnSiteNameChanging(global::System.String value);
        partial void OnSiteNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                if (_CompanyId != value)
                {
                    OnCompanyIdChanging(value);
                    ReportPropertyChanging("CompanyId");
                    _CompanyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyId");
                    OnCompanyIdChanged();
                }
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();

        #endregion

    
    }

    #endregion

    
}
